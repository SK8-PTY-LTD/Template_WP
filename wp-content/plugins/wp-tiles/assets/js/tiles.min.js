var Tiles={};(function($){var Tile=Tiles.Tile=function(tileId,element){this.id=tileId;this.top=0;this.left=0;this.width=0;this.height=0;this.$el=$(element||document.createElement("div"))};Tile.prototype.appendTo=function($parent,fadeIn,delay,duration){this.$el.hide().appendTo($parent);if(fadeIn){this.$el.delay(delay).fadeIn(duration)}else{this.$el.show()}};Tile.prototype.remove=function(animate,duration){if(animate){this.$el.fadeOut({complete:function(){$(this).remove()}})}else{this.$el.remove()}};Tile.prototype.resize=function(cellRect,pixelRect,animate,duration,onComplete){var cssChanges={},changed=false;if(this.left!==pixelRect.x){cssChanges.left=pixelRect.x;this.left=pixelRect.x;changed=true}if(this.top!==pixelRect.y){cssChanges.top=pixelRect.y;this.top=pixelRect.y;changed=true}if(this.width!==pixelRect.width){cssChanges.width=pixelRect.width;this.width=pixelRect.width;changed=true}if(this.height!==pixelRect.height){cssChanges.height=pixelRect.height;this.height=pixelRect.height;changed=true}var tile=this,validateChangesAndComplete=function(){var el=tile.$el[0];if(tile.left!==el.offsetLeft){tile.$el.css("left",tile.left)}if(tile.top!==el.offsetTop){tile.$el.css("top",tile.top)}if(onComplete){onComplete()}};if(animate&&changed){this.$el.animate(cssChanges,{duration:duration,easing:"swing",complete:validateChangesAndComplete})}else{if(changed){this.$el.css(cssChanges)}setTimeout(validateChangesAndComplete,duration)}}})(jQuery);(function($){var parseCells=function(rows){var cells=[],numRows=rows.length,x,y,row,rowLength,cell;for(y=0;y<numRows;y++){row=rows[y];cells[y]=[];for(x=0,rowLength=row.length;x<rowLength;x++){cell=row[x];if(cell!==" "){cells[y].push(cell)}}}return cells};function Rectangle(x,y,width,height){this.x=x;this.y=y;this.width=width;this.height=height}Rectangle.prototype.copy=function(){return new Rectangle(this.x,this.y,this.width,this.height)};Tiles.Rectangle=Rectangle;var parseRects=function(cells){var rects=[],numRows=cells.length,numCols=numRows===0?0:cells[0].length,cell,height,width,x,y,rectX,rectY;cells=cells.slice();for(y=0;y<numRows;y++){cells[y]=cells[y].slice()}for(y=0;y<numRows;y++){for(x=0;x<numCols;x++){cell=cells[y][x];if(cell==null){continue}width=1;height=1;if(cell!==Tiles.Template.SINGLE_CELL){while(width+x<numCols&&cell===cells[y][x+width]){width++}while(height+y<numRows&&cell===cells[y+height][x]){height++}}for(rectY=0;rectY<height;rectY++){for(rectX=0;rectX<width;rectX++){cells[y+rectY][x+rectX]=null}}rects.push(new Rectangle(x,y,width,height))}}return rects};Tiles.Template=function(rects,numCols,numRows){this.rects=rects;this.numTiles=this.rects.length;this.numRows=numRows;this.numCols=numCols};Tiles.Template.prototype.copy=function(){var copyRects=[],len,i;for(i=0,len=this.rects.length;i<len;i++){copyRects.push(this.rects[i].copy())}return new Tiles.Template(copyRects,this.numCols,this.numRows)};Tiles.Template.prototype.append=function(other){if(this.numCols!==other.numCols){throw"Appended templates must have the same number of columns"}var startY=this.numRows,i,len,rect;for(i=0,len=other.rects.length;i<len;i++){rect=other.rects[i];this.rects.push(new Rectangle(rect.x,startY+rect.y,rect.width,rect.height))}this.numRows+=other.numRows;this.numTiles+=other.numTiles};Tiles.Template.fromJSON=function(rows){var cells=parseCells(rows),rects=parseRects(cells);return new Tiles.Template(rects,cells.length>0?cells[0].length:0,cells.length)};Tiles.Template.prototype.toJSON=function(){var LABELS="ABCDEFGHIJKLMNOPQRSTUVWXYZ",NUM_LABELS=LABELS.length,labelIndex=0,rows=[],i,len,rect,x,y,label;for(y=0;y<this.numRows;y++){rows[y]=[];for(x=0;x<this.numCols;x++){rows[y][x]=Tiles.Template.SINGLE_CELL}}for(i=0,len=this.rects.length;i<len;i++){rect=this.rects[i];if(rect.width>1||rect.height>1){label=LABELS[labelIndex];for(y=0;y<rect.height;y++){for(x=0;x<rect.width;x++){rows[rect.y+y][rect.x+x]=label}}labelIndex=(labelIndex+1)%NUM_LABELS}}for(y=0;y<this.numRows;y++){rows[y]=rows[y].join("")}return rows};Tiles.Template.SINGLE_CELL="."})(jQuery);Tiles.UniformTemplates={get:function(numCols,targetTiles){var numRows=Math.ceil(targetTiles/numCols),rects=[],x,y;for(y=0;y<numRows;y++){for(x=0;x<numCols;x++){rects.push(new Tiles.Rectangle(x,y,1,1))}}return new Tiles.Template(rects,numCols,numRows)}};(function($){var Grid=Tiles.Grid=function(element){this.$el=$(element);this.animationDuration=500;this.cellSizeMin=150;this.templateFactory=Tiles.UniformTemplates;this.priorityPageSize=Number.MAX_VALUE;this.cellPadding=10;this.cellSize=0;this.numCols=1;this.template=null;this.isDirty=true;this.tiles=[];this.tilesAdded=[];this.tilesRemoved=[]};Grid.prototype.getContentWidth=function(){return this.$el.width()};Grid.prototype.resizeColumns=function(){var panelWidth=this.getContentWidth();return Math.max(1,Math.floor((panelWidth+this.cellPadding)/(this.cellSizeMin+this.cellPadding)))};Grid.prototype.resizeCellSize=function(){var panelWidth=this.getContentWidth();return Math.ceil((panelWidth+this.cellPadding)/this.numCols)-this.cellPadding};Grid.prototype.resize=function(){var newCols=this.resizeColumns();if(this.numCols!==newCols&&newCols>0){this.numCols=newCols;this.isDirty=true}var newCellSize=this.resizeCellSize();if(this.cellSize!==newCellSize&&newCellSize>0){this.cellSize=newCellSize;this.isDirty=true}};Grid.prototype.updateTiles=function(newTileIds){newTileIds=uniques(newTileIds);var numTiles=newTileIds.length,newTiles=[],i,tile,tileId,index;for(i=this.tiles.length-1;i>=0;i--){tile=this.tiles[i];index=$.inArray(tile.id,newTileIds);if(index<0){this.tilesRemoved.push(tile)}else{newTiles[index]=tile}}this.tiles=[];for(i=0;i<numTiles;i++){tile=newTiles[i];if(!tile){tileId=newTileIds[i];if(this.createTile){tile=this.createTile(tileId);if(!tile){continue}}else{tile=new Tiles.Tile(tileId)}this.tilesAdded.push(tile)}this.tiles.push(tile)}};function uniques(items){var results=[],numItems=items?items.length:0,i,item;for(i=0;i<numItems;i++){item=items[i];if($.inArray(item,results)===-1){results.push(item)}}return results}Grid.prototype.insertTiles=function(newTileIds){this.addTiles(newTileIds,true)};Grid.prototype.addTiles=function(newTileIds,prepend){if(!newTileIds||newTileIds.length===0){return}var prevTileIds=[],prevTileCount=this.tiles.length,i;for(i=0;i<prevTileCount;i++){prevTileIds.push(this.tiles[i].id)}var tileIds=prepend?newTileIds.concat(prevTileIds):prevTileIds.concat(newTileIds);this.updateTiles(tileIds)};Grid.prototype.removeTiles=function(removeTileIds){if(!removeTileIds||removeTileIds.length===0){return}var updateTileIds=[],i,len,id;for(i=0,len=this.tiles.length;i<len;i++){id=this.tiles[i].id;if($.inArray(id,removeTileIds)===-1){updateTileIds.push(id)}}this.updateTiles(updateTileIds)};Grid.prototype.createTemplate=function(numCols,targetTiles){numCols=Math.max(1,numCols);var template=this.templateFactory.get(numCols,targetTiles);if(!template){template=Tiles.UniformTemplates.get(numCols,targetTiles)}return template};Grid.prototype.ensureTemplate=function(numTiles){if(!this.template||this.template.numCols!==this.numCols){this.template=this.createTemplate(this.numCols,numTiles);this.isDirty=true}else{var missingRects=numTiles-this.template.rects.length;if(missingRects>0){this.template.append(this.createTemplate(this.numCols,missingRects));this.isDirty=true}}};function wasOrWillBeVisible(viewRect,tile,newRect){var viewMaxY=viewRect.y+viewRect.height,viewMaxX=viewRect.x+viewRect.width;if(tile){if(!(tile.top>viewMaxY||tile.top+tile.height<viewRect.y||tile.left>viewMaxX||tile.left+tile.width<viewRect.x)){return true}}if(newRect){if(!(newRect.y>viewMaxY||newRect.y+newRect.height<viewRect.y||newRect.x>viewMaxX||newRect.x+newRect.width<viewRect.x)){return true}}return false}Grid.prototype.shouldRedraw=function(){if(this.cellSize<=0){this.resize()}this.ensureTemplate(this.tiles.length);var shouldRedraw=this.isDirty||this.tilesAdded.length>0||this.tilesRemoved.length>0;return shouldRedraw};Grid.prototype.redraw=function(animate,onComplete){if(!this.shouldRedraw()){if(onComplete){onComplete(false)}return}var numTiles=this.tiles.length,pageSize=this.priorityPageSize,duration=this.animationDuration,cellPlusPadding=this.cellSize+this.cellPadding,tileIndex=0,appendDelay=0,viewRect=new Tiles.Rectangle(this.$el.scrollLeft(),this.$el.scrollTop(),this.$el.width(),this.$el.height()),tile,added,pageRects,pageTiles,i,len,cellRect,pixelRect,animateTile,priorityRects,priorityTiles;for(tileIndex=0;tileIndex<numTiles;tileIndex+=pageSize){pageRects=this.template.rects.slice(tileIndex,tileIndex+pageSize);pageTiles=this.tiles.slice(tileIndex,tileIndex+pageSize);priorityRects=pageRects.slice(0);priorityTiles=pageTiles.slice(0);if(this.prioritizePage){this.prioritizePage(priorityRects,priorityTiles)}for(i=0,len=priorityTiles.length;i<len;i++){tile=priorityTiles[i];added=$.inArray(tile,this.tilesAdded)>=0;cellRect=priorityRects[i];pixelRect=new Tiles.Rectangle(cellRect.x*cellPlusPadding,cellRect.y*cellPlusPadding,cellRect.width*cellPlusPadding-this.cellPadding,cellRect.height*cellPlusPadding-this.cellPadding);tile.resize(cellRect,pixelRect,animate&&!added&&wasOrWillBeVisible(viewRect,tile,pixelRect),duration);if(added){animateTile=animate&&wasOrWillBeVisible(viewRect,null,pixelRect);if(animateTile&&this.getAppendDelay){appendDelay=this.getAppendDelay(cellRect,pageRects,priorityRects,tile,pageTiles,priorityTiles)}else{appendDelay=0}tile.appendTo(this.$el,animateTile,appendDelay,duration)}}}for(i=0,len=this.tilesRemoved.length;i<len;i++){tile=this.tilesRemoved[i];animateTile=animate&&wasOrWillBeVisible(viewRect,tile,null);tile.remove(animateTile,duration)}this.tilesRemoved=[];this.tilesAdded=[];this.isDirty=false;if(onComplete){setTimeout(function(){onComplete(true)},duration+10)}}})(jQuery);